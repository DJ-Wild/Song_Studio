import telebot
from telebot.types import WebAppInfo, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import requests
import sys
import traceback

# –í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω Telegram Bot API
API_TOKEN = '7141816414:AAHeoTdd6ZuDkqiYI702FN4_OKBsZ5KcnlA'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# URL –≤–∞—à–µ–≥–æ WebApp
WEB_APP_URL = "https://dj-wild.github.io/Song_Studio/"

# –°—Å—ã–ª–∫–∞ –Ω–∞ JSON —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏
NEWS_URL = "https://dj-wild.github.io/Song_Studio/news.json"

news_cache = {}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}

# ID –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ (—É–∫–∞–∂–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π user_id)
MODERATOR_USER_ID = 1534688019  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π user_id –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞

Exit = InlineKeyboardMarkup()
Exit.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Exit"))

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
def log_error(exc_type, exc_value, exc_tb):
    """–ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫, –≤—ã–≤–æ–¥ –æ—à–∏–±–æ–∫ –≤ –∫–æ–Ω—Å–æ–ª—å."""
    error_message = "".join(traceback.format_exception(exc_type, exc_value, exc_tb))
    print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error_message}")
    # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
    bot.send_message(
        MODERATOR_USER_ID,  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
        f"""–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {error_message}""")

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
sys.excepthook = log_error

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App."""
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ Web App –∫–Ω–æ–ø–∫–∏
        web_app = WebAppInfo(url=WEB_APP_URL)
        markup = InlineKeyboardMarkup()
        markup.add(InlineKeyboardButton(text="–û—Ç–∫—Ä—ã—Ç—å", web_app=web_app))

        bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π –±–æ—Ç DJ_Wild Song Studio! –° –ø–æ–º–æ—â—å—é –Ω–µ–≥–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—á–∏—Ç–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≥—Ä–∞—Ñ–∏–∫ –≤—ã—Ö–æ–¥–∞ –ø–µ—Å–µ–Ω! –î–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç—å. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ –∫–æ–º–∞–Ω–¥ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help",
            reply_markup=markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ send_welcome: {e}")

@bot.message_handler(commands=['help'])
def send_help(message):
    try:
        bot.send_message(message.chat.id, """
–ö–æ–º–∞–Ω–¥—ã:

/start - –í—ã–≤–æ–¥–∏—Ç —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–µ—Ä–µ—Ö–æ–¥–æ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
/help - –í—ã–≤–æ–¥–∏—Ç –¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
/about - –í—ã–≤–æ–¥–∏—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞
/support - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
/news - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
""", reply_markup=Exit)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ send_help: {e}")

@bot.message_handler(commands=['about'])
def send_about(message):
    try:
        bot.send_message(message.chat.id, """
–≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç DJ_Wild Song Studio(DJ_Wild SS)!

–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç—É–¥–∏–∏(–≥—Ä–∞—Ñ–∏–∫–∏ –≤—ã—Ö–æ–¥–∞ –ø–µ—Å–µ–Ω –∏ –Ω–æ–≤–æ—Å—Ç–∏)

–¢–∞–∫–∂–µ –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –≤–æ–ø—Ä–æ—Å—ã –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –ø–æ –∫–æ–º–∞–Ω–¥–µ /support

–í—Å–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /help

–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: 17.12.24
–°–æ–∑–¥–∞—Ç–µ–ª—å: @xDJ_Wildx""", reply_markup=Exit)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ send_about: {e}")

@bot.message_handler(commands=['news'])
def send_news(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞."""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON-—Ñ–∞–π–ª–∞
        response = requests.get(NEWS_URL)
        response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å–ø–µ—à–µ–Ω –ª–∏ –∑–∞–ø—Ä–æ—Å
        news_data = response.json()  # –ü–∞—Ä—Å–∏–º JSON

        if not news_data:
            bot.send_message(message.chat.id, "–ù–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞ –Ω–µ—Ç. –ó–∞–≥–ª—è–Ω–∏—Ç–µ –ø–æ–∑–∂–µ!")
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≤ –∫—ç—à–µ (–¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–æ–∫)
        news_cache[message.chat.id] = news_data

        # –°–æ–∑–¥–∞–µ–º Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
        markup = InlineKeyboardMarkup()
        for i, news in enumerate(news_data, start=1):
            title = news.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            button_text = f"{i}. {title}"
            markup.add(InlineKeyboardButton(button_text, callback_data=f"news_{i-1}"))
        markup.add(InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="Exit"))
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤–æ—Å—Ç—å –¥–ª—è —á—Ç–µ–Ω–∏—è:",
            reply_markup=markup
        )
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        bot.send_message(message.chat.id, "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ send_news: {e}")

@bot.callback_query_handler(func=lambda call: call.data.startswith("news_"))
def handle_news_selection(call):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—ã–±–æ—Ä –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≤—ã–≤–æ–¥–∏—Ç –µ—ë —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω–¥–µ–∫—Å –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ callback_data
        news_index = int(call.data.split("_")[1])

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–æ–≤–æ—Å—Ç–∏ –≤ –∫—ç—à–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_news = news_cache.get(call.message.chat.id)
        if user_news is None or news_index >= len(user_news):
            bot.answer_callback_query(call.id, "–≠—Ç–∞ –Ω–æ–≤–æ—Å—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞.")
            return

        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å
        selected_news = user_news[news_index]
        title = selected_news.get("title", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
        content = selected_news.get("content", "–ù–µ—Ç —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            call.message.chat.id,
            f"üì¢ *{title}*\n\n{content}",
            parse_mode="Markdown", reply_markup=Exit
        )
        bot.answer_callback_query(call.id)  # –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram, —á—Ç–æ –∑–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–æ—Ç–∞–Ω
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_news_selection: {e}")
        bot.answer_callback_query(call.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–∏.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /support
@bot.message_handler(commands=['support'])
def handle_support(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∂–∞–ª–æ–±—ã."""
    try:
        # –°–æ–∑–¥–∞–µ–º inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞, —É–≤–µ—Ä–µ–Ω" –∏ "–ù–∞–∑–∞–¥"
        markup = InlineKeyboardMarkup()
        markup.add(
            InlineKeyboardButton("–î–∞, —É–≤–µ—Ä–µ–Ω", callback_data="confirm_support"),
            InlineKeyboardButton("–ù–∞–∑–∞–¥", callback_data="cancel_support")
        )

        bot.send_message(
            message.chat.id,
            "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏! –í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏–∏? –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–¥–∏ –≤–µ—Å–µ–ª—å—è, —Ç–æ –¥–ª—è –≤–∞—Å –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—Å—è!!!",
            reply_markup=markup
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_support: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–î–∞, —É–≤–µ—Ä–µ–Ω" –∏ "–ù–∞–∑–∞–¥"
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    try:
        if call.data == "confirm_support":
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            user_states[call.message.chat.id] = 'awaiting_message'

            bot.send_message(
                call.message.chat.id,
                "–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –±–∞–≥–∞—Ö –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ –≤—ã —Å—Ç–æ–ª–∫–Ω—É–ª–∏—Å—å."
            )
            bot.delete_message(call.message.chat.id, call.message.message_id)

        elif call.data == "cancel_support":
            bot.delete_message(call.message.chat.id, call.message.message_id)
        elif call.data == "Exit":
            bot.delete_message(call.message.chat.id, call.message.message_id)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ callback_query: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: message.chat.id in user_states and user_states[message.chat.id] == 'awaiting_message')
def handle_user_message(message):
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —é–∑–µ—Ä–Ω–µ–π–º
        user_states[message.chat.id] = 'message_sent'

        user_message = message.text
        username = message.from_user.username if message.from_user.username else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É –ø–æ user_id
        bot.send_message(
            MODERATOR_USER_ID,  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—É
            f"""
#support
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}
–°–æ–æ–±—â–µ–Ω–∏–µ: {user_message}"""
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        bot.send_message(
            message.chat.id,
            "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –º–æ–∂–µ—Ç –≤–∞–º –Ω–∞–ø–∏—Å–∞—Ç—å –≤ –õ–°!"
        )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ handle_user_message: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π, –µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    try:
        bot.reply_to(message, "–ù–µ–æ–ø–æ–∑–Ω–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—èü´†")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ echo_all: {e}")

if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()
